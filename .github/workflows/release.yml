name: Build and Release for Windows

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: windows-latest

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: true

      - name: Check for frontend lock file
        id: check_lock_file
        run: |
          if [[ -f "frontend/package-lock.json" ]]; then
            echo "lock_exists=true" >> $GITHUB_OUTPUT
          else
            echo "lock_exists=false" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Setup Node (with cache)
        if: steps.check_lock_file.outputs.lock_exists == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Setup Node (no cache)
        if: steps.check_lock_file.outputs.lock_exists == 'false'
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      - name: Install Wails CLI
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Build Wails app for Windows
        run: |
          wails build -ldflags="-X main.dataServiceURL=${{ secrets.DATA_SERVICE_URL }} -X main.publicKey=${{ secrets.TIDB_PUBLIC_KEY }} -X main.privateKey=${{ secrets.TIDB_PRIVATE_KEY }}" -clean -upx -webview2 embed

      - name: Prepare Artifact for Release
        run: |
          mv "./build/bin/ShiroGal.exe" "./ShiroGal-windows-amd64.exe"
        shell: bash

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          files: ShiroGal-windows-amd64.exe
          generate_release_notes: true
